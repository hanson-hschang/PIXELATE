name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install dependencies
      shell: bash
      run: |
        uv sync --group dev

    - name: Lint with flake8
      shell: bash
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        uv run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        uv run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --extend-ignore=E203,W503,D104,D107,D102,D200 --statistics

    - name: Check code formatting with black
      shell: bash
      run: |
        uv run black --check --diff .

    - name: Check import sorting with isort
      shell: bash
      run: |
        uv run isort --check-only --diff --profile black .

    - name: Type check with mypy
      shell: bash
      run: |
        uv run mypy pixelate/ tests/

    - name: Security check with bandit
      shell: bash
      run: |
        uv run bandit -r pixelate/ -f json -o bandit-report.json || true
        uv run bandit -r pixelate/

    - name: Test with pytest
      shell: bash
      run: |
        uv run python -m pytest tests/ -v --tb=short

    - name: Test CLI functionality
      shell: bash
      run: |
        # Test CLI help
        uv run pixelate --help
        # Test with example file
        uv run pixelate examples/pixelate.md
        # Verify output was created
        ls -la examples/pixelate.png
        # Clean up
        rm examples/pixelate.png

  security:
    name: Security Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'python' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}

    - name: Autobuild
      uses: github/codeql-action/autobuild@v3

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"