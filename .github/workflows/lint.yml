name: Lint

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true

    - name: Set up Python 3.11
      run: uv python install 3.11

    - name: Install dependencies
      shell: bash
      run: |
        uv sync --all-groups --all-extras

    - name: Lint with flake8
      shell: bash
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        uv run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude=.venv
        # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        uv run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --extend-ignore=E203,W503,D104,D107,D102,D200 --statistics --exclude=.venv

    - name: Check code formatting with black
      shell: bash
      run: |
        uv run black --check --diff --config pyproject.toml src tests

    - name: Check import sorting with isort
      shell: bash
      run: |
        uv run isort --diff --check-only --settings-path pyproject.toml src tests

    - name: Type check with mypy
      shell: bash
      run: |
        uv run mypy --config-file pyproject.toml src tests

    - name: Security check with bandit
      shell: bash
      run: |
        uv run bandit -r src/ -f json -o bandit-report.json || true
        uv run bandit -r src/
